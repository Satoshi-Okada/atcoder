{
    "vector generator": {
        "prefix": "vec",
        "body": [
            "vector<${1:int}> ${vc};"
        ],
    },
    "cout generator": {
        "prefix": "co",
        "body": [
            "cout << $1 << endl;"
        ],
    },
    "sort function": {
        "prefix": "sort",
        "body": [
            "sort(${1:vc}.begin(),${1:vc}.end());"
        ],
    },
    "array new": {
        "prefix": "new",
        "body": [
            "new ${1:int}[${2:n}];"
        ],
    },
    "for_rep": {
        "prefix": "rep",
        "body": [
            "rep(${1:i},${2:n})",
            "{",
            "\t${0:}",
            "}"
        ],
    },
    "list": {
        "prefix": "list",
        "body": [
            "list<${1:int}> ${list};"
        ],
    },
    "cin": {
        "prefix": "ci",
        "body": [
            "cin >> $0;",
        ],
        "description": "変数宣言をして標準入力からデータを読み込みます。"
    },
    "template": {
        "prefix": "temp",
        "body": [
            "#include <bits/stdc++.h>"
			"using namespace std;"
			"" 
			"#define ll long long"
			"#define ld long double"
			"#define MOD 1000000007"
			"#define rep(i, n) for(int i = 0; i < (int)(n); i++)"
			"#define PI 3.14159265358979323846"
			"#define sz(x) ((int)(x).size())"
			""
			"int main()"
			"{"
			"\t${0:}"
			"}"
        ]
    },
    // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
}